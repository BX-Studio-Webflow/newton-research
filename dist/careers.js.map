{"version":3,"file":"careers.js","sources":["../src/careers.ts"],"sourcesContent":["import { DepartmentResponse } from \"./types\";\n\nconst END_POINT =\n  \"https://boards-api.greenhouse.io/v1/boards/newtonresearch/departments\";\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const jobWrap = document.querySelector(`[dev-target=jobs-wrap]`);\n  const jobTemplate = document.querySelector(`[dev-target=job-template]`);\n  const jobLoader = document.querySelector(`[dev-target=job-loader]`);\n\n  if (!jobWrap || !jobTemplate)\n    return console.error(`No job wrap or job template found`);\n\n  const { data, error } = await getPositions();\n  console.log({ data });\n  if (data) {\n    jobWrap.innerHTML = \"\";\n    jobLoader?.setAttribute(\"dev-hide\", \"true\");\n    jobWrap.setAttribute(\"dev-hide\", \"false\");\n    data.departments\n      .map(({ jobs }) => jobs)\n      .flat()\n      .slice(0, 3)\n      .map(({ absolute_url, location, title }) => ({\n        absolute_url,\n        location,\n        title,\n      }))\n      .forEach(({ absolute_url, location, title }) => {\n        const item = jobTemplate.cloneNode(true) as HTMLDivElement;\n        const name = item.querySelector(`[dev-target=title]`);\n        const link = item.querySelector<HTMLLinkElement>(`[dev-target=link]`);\n        const locationDiv = item.querySelector(`[dev-target=location]`);\n        const description = item.querySelector(`[dev-target=description]`);\n        if (name) name.textContent = title;\n        if (link) link.href = absolute_url;\n        if (locationDiv) locationDiv.textContent = location.name;\n        if (description) description.textContent = \"\";\n        jobWrap.appendChild(item);\n      });\n  }\n  if (error) {\n    console.error(\"Error fetching positions\", error);\n  }\n\n  async function getPositions() {\n    try {\n      const res = await fetch(END_POINT);\n      const data: DepartmentResponse = await res.json();\n      return { data, error: null };\n    } catch (error) {\n      return { data: null, error };\n    }\n  }\n});\n"],"names":["END_POINT","jobWrap","jobTemplate","jobLoader","data","error","getPositions","jobs","absolute_url","location","title","item","name","link","locationDiv","description"],"mappings":"AAEA,MAAMA,EACJ,wEAEF,SAAS,iBAAiB,mBAAoB,SAAY,CAClD,MAAAC,EAAU,SAAS,cAAc,wBAAwB,EACzDC,EAAc,SAAS,cAAc,2BAA2B,EAChEC,EAAY,SAAS,cAAc,yBAAyB,EAE9D,GAAA,CAACF,GAAW,CAACC,EACR,OAAA,QAAQ,MAAM,mCAAmC,EAE1D,KAAM,CAAE,KAAAE,EAAM,MAAAC,CAAM,EAAI,MAAMC,EAAa,EACnC,QAAA,IAAI,CAAE,KAAAF,EAAM,EAChBA,IACFH,EAAQ,UAAY,GACTE,GAAA,MAAAA,EAAA,aAAa,WAAY,QAC5BF,EAAA,aAAa,WAAY,OAAO,EACnCG,EAAA,YACF,IAAI,CAAC,CAAE,KAAAG,KAAWA,CAAI,EACtB,KAAK,EACL,MAAM,EAAG,CAAC,EACV,IAAI,CAAC,CAAE,aAAAC,EAAc,SAAAC,EAAU,MAAAC,MAAa,CAC3C,aAAAF,EACA,SAAAC,EACA,MAAAC,CAAA,EACA,EACD,QAAQ,CAAC,CAAE,aAAAF,EAAc,SAAAC,EAAU,MAAAC,KAAY,CACxC,MAAAC,EAAOT,EAAY,UAAU,EAAI,EACjCU,EAAOD,EAAK,cAAc,oBAAoB,EAC9CE,EAAOF,EAAK,cAA+B,mBAAmB,EAC9DG,EAAcH,EAAK,cAAc,uBAAuB,EACxDI,EAAcJ,EAAK,cAAc,0BAA0B,EAC7DC,MAAW,YAAcF,GACzBG,MAAW,KAAOL,GAClBM,IAAyBA,EAAA,YAAcL,EAAS,MAChDM,MAAyB,YAAc,IAC3Cd,EAAQ,YAAYU,CAAI,CAAA,CACzB,GAEDN,GACM,QAAA,MAAM,2BAA4BA,CAAK,EAGjD,eAAeC,GAAe,CACxB,GAAA,CAGF,MAAO,CAAE,KADwB,MADrB,MAAM,MAAMN,CAAS,GACU,KAAK,EACjC,MAAO,IAAK,QACpBK,EAAO,CACd,MAAO,CAAE,KAAM,KAAM,MAAAA,CAAM,CAAA,CAC7B,CAEJ,CAAC"}